name: Tests

env:
  PLUGIN_NAME: redmine_angular_ui

on:
  push:
  pull_request:

jobs:
  test:
    name: ${{ matrix.redmine }} ${{ matrix.db }} ruby-${{ matrix.ruby }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        ruby: ['2.6']
        redmine: ['4.1.1', '4.0.7']
        db: ['postgres']
      fail-fast: false

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: redmine
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Redmine
        uses: actions/checkout@v2
        with:
          repository: redmine/redmine
          ref: ${{ matrix.redmine }}
          path: redmine

      - name: Checkout dependencies - Base Deface plugin
        uses: actions/checkout@v2
        with:
          repository: jbbarth/redmine_base_deface
          path: redmine/plugins/redmine_base_deface

      - name: Checkout dependencies - Base RSpec plugin
        uses: actions/checkout@v2
        with:
          repository: jbbarth/redmine_base_rspec
          path: redmine/plugins/redmine_base_rspec

      - name: Checkout dependencies - Base StimulusJS plugin
        uses: actions/checkout@v2
        with:
          repository: nanego/redmine_base_stimulusjs
          path: redmine/plugins/redmine_base_stimulusjs

      - name: Checkout plugin
        uses: actions/checkout@v2
        with:
          path: redmine/plugins/${{ env.PLUGIN_NAME }}

      - name: Update package archives
        run: sudo apt-get update --yes --quiet

      - name: Install package dependencies
        run: >
          sudo apt-get install --yes --quiet
          build-essential
          cmake
          libicu-dev
          libpq-dev

      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - name: Setup Bundler
        run: gem install bundler -v '~> 1.0'

      - name: Prepare Redmine source
        working-directory: redmine
        run: |
          sed -i '/rubocop/d' Gemfile
          rm -f .rubocop*
          cp plugins/${{ env.PLUGIN_NAME }}/spec/support/database-${{ matrix.db }}.yml config/database.yml

      - name: Install Ruby dependencies
        working-directory: redmine
        run: |
          bundle install --jobs=4 --retry=3 --without development

      - name: Generate session store secret
        env:
          RAILS_ENV: test
        working-directory: redmine
        run: |
          bundle exec rake generate_secret_token

      - name: Run Redmine DB and migration tasks
        env:
          RAILS_ENV: test
        working-directory: redmine
        run: |
          bundle exec rake db:create db:migrate redmine:plugins:migrate
          bundle exec rails db:fixtures:load
          bundle exec rails test:scm:setup:subversion

      - name: Run core tests
        env:
          RAILS_ENV: test
          REDMINE_VERSION: ${{ matrix.redmine }}
        working-directory: redmine
        run: bundle exec rails test

      - name: Run plugin tests
        env:
          RAILS_ENV: test
          REDMINE_VERSION: ${{ matrix.redmine }}
        working-directory: redmine
        run: bundle exec rails redmine:plugins:test NAME=${{ env.PLUGIN_NAME }} RUBYOPT="-W0"

      - name: Run uninstall test
        env:
          RAILS_ENV: test
          REDMINE_VERSION: ${{ matrix.redmine }}
        working-directory: redmine
        run: bundle exec rake redmine:plugins:migrate NAME=${{ env.PLUGIN_NAME }} VERSION=0
